@use "Button.scss";

// can't use just .button since I'm extending it...
:local(.dropdownButton) {
    @extend :local(.button);

    &.visible svg {
        transform: rotate(-180deg);
    }
}

:local(.dropdown) {
    position: absolute;
    display: flex;

    flex-direction: column;
    gap: 0.5rem;
    overflow-y: auto;

    min-width: 10.5rem;
    width: max-content;
    max-width: calc(var(--anchor-max-width) + var(--anchor-width) - 1rem);

    // When the anchor is on the bottom, we need to account for the safe area inset.
    max-height: calc(var(--anchor-max-height) - var(--h, env(safe-area-inset-bottom)) - 1rem);

    padding: 0.5rem;
    margin-block: 0.5rem;

    background-color: var(--dimmed-background);
    border-radius: 0.6rem;

    box-shadow: 0 0.0625rem 0.5rem -0.125rem #000;

    // Light theme has a lighter box shadow
    :root.light & {
        box-shadow: 0 0.0625rem 0.25rem -0.125rem #000;
    }

    white-space: pre;

    transform: translateX(calc(var(--anchor-width) * var(--x, -1))); // Correctly position the dropdown based on the anchor's position
    box-sizing: border-box;

    outline: none; // This element is not focusable, so we don't want the outline to show up

    &.anchor-left {
        --x: 1; // When the anchor is on the left, the dropdown should be on the right. So we set the x to 1 and thus the translateX to -100%.
    }

    &.anchor-top {
        --h: env(safe-area-inset-top); // When the anchor is on the top, we need to account for the safe area inset.
    }

    // Disable the button's box shadow in light theme (but not for active buttons)
    :root.light & :local(.button):not(.active) {
        box-shadow: none;
    }

    // scroll bars
    scrollbar-width: thin;

    &::-webkit-scrollbar {
        background: transparent;
    }

    &::-webkit-scrollbar-thumb {
        background: var(--element-background);
    }

    :local(.control) {
        // extend from .button as well
        @extend :local(.button);

        width: 100%;
        height: 2.6rem;
        flex: 0 0 auto;

        padding: 0 0.7rem;

        border-radius: 0.4rem;

        text-align: left;

        &:not(.active) + :local(.control):not(.active)::before {
            content: "";
            position: absolute;

            width: 80%;
            height: 0.125rem;
            background-color: var(--element-background);

            top: calc(-0.125rem / 2 - 0.25rem);
        }
    }
}
