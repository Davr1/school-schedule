{
    "extends": "./.svelte-kit/tsconfig.json",
    "compilerOptions": {
        "moduleResolution": "Node",
        "target": "ESNext",
        "module": "ESNext",
        /**
         * svelte-preprocess cannot figure out whether you have
         * a value or a type, so tell TypeScript to enforce using
         * `import type` instead of `import` for Types.
         */
        // "importsNotUsedAsValues": "error",
        "isolatedModules": true,
        "resolveJsonModule": true,
        /**
         * To have warnings / errors of the Svelte compiler at the
         * correct position, enable source maps by default.
         */
        "sourceMap": true,
        "esModuleInterop": true,
        "skipLibCheck": true,
        "forceConsistentCasingInFileNames": true,
        "baseUrl": ".",
        "paths": {
            "$lib": ["./src/lib"],
            "$lib/*": ["./src/lib/*"],
            "$components": ["./src/components"],
            "$components/*": ["./src/components/*"],
            "$stores": ["./src/stores"],
            "$stores/*": ["./src/stores/*"],
            "$styles": ["./src/styles"],
            "$styles/*": ["./src/styles/*"],
            "$assets": ["./src/assets"],
            "$assets/*": ["./src/assets/*"]
        },
        /**
         * Typecheck JS in `.svelte` and `.js` files by default.
         * Disable this if you'd like to use dynamic types.
         */
        "checkJs": true
    },
    /**
     * Use global.d.ts instead of compilerOptions.types
     * to avoid limiting type declarations.
     */
    "include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.svelte"]
}
